buildscript {
    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
        jcenter()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0'
    }
}
version = PROJECT_VERSION
group = PROJECT_GROUP

subprojects {
    apply plugin: 'groovy'

    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
        jcenter()
        maven { url "https://repo.grails.org/grails/core" }
    }

    configurations.all {
        ["ant", "bsf", "console", "docgenerator", "groovydoc", "groovysh",
         "jmx", "json", "jsr223", "nio", "servlet", "sql",
         "swing", "test", "templates", "testng", "xml"].each {
            exclude group: 'org.codehaus.groovy', module: "groovy-$it"
        }
        exclude group: 'org.codehaus.groovy', module: 'groovy'
    }
    dependencies {
        compile "org.codehaus.groovy:groovy-all:$groovyVersion"
        compile "org.springframework.boot:spring-boot-starter-logging:${springBootVersion}"

        testCompile "org.spockframework:spock-spring:$spockVersion"
        testCompile "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    }

    if (!it.name.endsWith('demo')) {
        apply plugin: 'maven-publish'
        apply plugin: 'com.jfrog.bintray'

        task sourceJar(type: Jar) {
            from(sourceSets.test.allSource)
        }

        publishing {
            publications {
                mavenJava(MavenPublication) {
                    from components.java

                    artifact sourceJar {
                        classifier "sources"
                    }

                    groupId PROJECT_GROUP
                    artifactId project.name
                    version PROJECT_VERSION
                }
            }
        }

        bintray {
            user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
            key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')

            publications = ['mavenJava']
            pkg {
                repo = 'maven'
                name = project.name
                licenses = ['Apache-2.0']
                issueTrackerUrl = 'https://github.com/neoscript99/gorm-graphql-spring-boot/issues'
                websiteUrl = 'https://github.com/neoscript99/gorm-graphql-spring-boot.git'
                vcsUrl = 'https://github.com/neoscript99/gorm-graphql-spring-boot'
                publicDownloadNumbers = true

                version {
                    name = PROJECT_VERSION
                    desc = "$project.name $PROJECT_VERSION"
                    released = new Date()
                    vcsTag = "v$PROJECT_VERSION"
                }
            }
        }
    }
}